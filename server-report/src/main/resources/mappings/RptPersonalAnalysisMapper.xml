<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ebase.report.dao.RptPersonalAnalysisMapper">
    <resultMap id="BaseResultMap" type="com.ebase.report.model.RptPersonalAnalysis">
        <id column="PERSONAL_ANALYSIS_ID" jdbcType="BIGINT" property="personalAnalysisId" />
        <result column="PERSONAL_SUBJECT_ID" jdbcType="BIGINT" property="personalSubjectId" />
        <result column="REPORT_NAME" jdbcType="VARCHAR" property="reportName" />
        <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
        <result column="CREATED_BY" jdbcType="VARCHAR" property="createdBy" />
        <result column="CREATED_DT" jdbcType="TIMESTAMP" property="createdDt" />
        <result column="UPDATED_BY" jdbcType="VARCHAR" property="updatedBy" />
        <result column="UPDATED_DT" jdbcType="TIMESTAMP" property="updatedDt" />

        <result column="ROLE_ID" jdbcType="VARCHAR" property="roleId" />
        <result column="SHARING_PERSON_ID" jdbcType="VARCHAR" property="sharingPersonId" />
        <result column="SHARING_PERSON_NAME" jdbcType="VARCHAR" property="sharingPersonName" />

        <result column="ANALYSIS_SOURCE_ID" jdbcType="BIGINT" property="analysisSourceId" />
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ebase.report.model.RptPersonalAnalysis">
        <result column="CONFIG_JSON" jdbcType="LONGVARCHAR" property="configJson" />
        <result column="SUBJECT_NAME" jdbcType="VARCHAR" property="subjectName" />
        <result column="TABLE_NAME" jdbcType="VARCHAR" property="tableName" />
    </resultMap>
    <sql id="Base_Column_List">
        PERSONAL_ANALYSIS_ID, PERSONAL_SUBJECT_ID, REPORT_NAME, USER_ID, CREATED_BY, CREATED_DT, 
        UPDATED_BY, UPDATED_DT,ROLE_ID,SHARING_PERSON_ID,SHARING_PERSON_NAME,ANALYSIS_SOURCE_ID
    </sql>
    <sql id="Blob_Column_List">
        CONFIG_JSON
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select 
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from rpt_personal_analysis
        where PERSONAL_ANALYSIS_ID = #{personalAnalysisId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from rpt_personal_analysis
        where PERSONAL_ANALYSIS_ID = #{personalAnalysisId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.ebase.report.model.RptPersonalAnalysis">
        insert into rpt_personal_analysis (PERSONAL_ANALYSIS_ID, PERSONAL_SUBJECT_ID, 
            REPORT_NAME, USER_ID, CREATED_BY, 
            CREATED_DT, UPDATED_BY, UPDATED_DT, 
            CONFIG_JSON,ROLE_ID,SHARING_PERSON_ID,SHARING_PERSON_NAME,ANALYSIS_SOURCE_ID)
        values (#{personalAnalysisId,jdbcType=BIGINT}, #{personalSubjectId,jdbcType=BIGINT}, 
            #{reportName,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, 
            #{createdDt,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}, #{updatedDt,jdbcType=TIMESTAMP}, 
            #{configJson,jdbcType=LONGVARCHAR},#{roleId,jdbcType=VARCHAR},#{sharingPersonId,jdbcType=VARCHAR},
            #{sharingPersonName,jdbcType=VARCHAR},#{analysisSourceId,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" parameterType="com.ebase.report.model.RptPersonalAnalysis" useGeneratedKeys="true" keyProperty="personalAnalysisId">
        insert into rpt_personal_analysis
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="personalSubjectId != null">
                PERSONAL_SUBJECT_ID,
            </if>
            <if test="reportName != null">
                REPORT_NAME,
            </if>
            <if test="userId != null">
                USER_ID,
            </if>
            <if test="createdBy != null">
                CREATED_BY,
            </if>
            <if test="createdDt != null">
                CREATED_DT,
            </if>
            <if test="updatedBy != null">
                UPDATED_BY,
            </if>
            <if test="updatedDt != null">
                UPDATED_DT,
            </if>
            <if test="configJson != null">
                CONFIG_JSON,
            </if>
            <if test="roleId != null">
                ROLE_ID,
            </if>
            <if test="sharingPersonId != null">
                SHARING_PERSON_ID,
            </if>
            <if test="sharingPersonName != null">
                SHARING_PERSON_NAME,
            </if>
            <if test="analysisSourceId != null">
                ANALYSIS_SOURCE_ID,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="personalSubjectId != null">
                #{personalSubjectId,jdbcType=BIGINT},
            </if>
            <if test="reportName != null">
                #{reportName,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="createdDt != null">
                #{createdDt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedBy != null">
                #{updatedBy,jdbcType=VARCHAR},
            </if>
            <if test="updatedDt != null">
                #{updatedDt,jdbcType=TIMESTAMP},
            </if>
            <if test="configJson != null">
                #{configJson,jdbcType=LONGVARCHAR},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="sharingPersonId != null">
                #{sharingPersonId,jdbcType=VARCHAR},
            </if>
            <if test="sharingPersonName != null">
                #{sharingPersonName,jdbcType=VARCHAR},
            </if>
            <if test="analysisSourceId != null">
                #{analysisSourceId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ebase.report.model.RptPersonalAnalysis">
        update rpt_personal_analysis
        <set>
            <if test="personalSubjectId != null">
                PERSONAL_SUBJECT_ID = #{personalSubjectId,jdbcType=BIGINT},
            </if>
            <if test="reportName != null">
                REPORT_NAME = #{reportName,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                USER_ID = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="createdBy != null">
                CREATED_BY = #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="createdDt != null">
                CREATED_DT = #{createdDt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedBy != null">
                UPDATED_BY = #{updatedBy,jdbcType=VARCHAR},
            </if>
            <if test="updatedDt != null">
                UPDATED_DT = #{updatedDt,jdbcType=TIMESTAMP},
            </if>
            <if test="configJson != null">
                CONFIG_JSON = #{configJson,jdbcType=LONGVARCHAR},
            </if>
            <if test="roleId != null">
                ROLE_ID = #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="sharingPersonId != null">
                SHARING_PERSON_ID = #{sharingPersonId,jdbcType=VARCHAR},
            </if>
            <if test="sharingPersonName != null">
                SHARING_PERSON_NAME = #{sharingPersonName,jdbcType=VARCHAR},
            </if>
            <if test="analysisSourceId != null">
                ANALYSIS_SOURCE_ID = #{analysisSourceId,jdbcType=BIGINT},
            </if>
        </set>
        where PERSONAL_ANALYSIS_ID = #{personalAnalysisId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ebase.report.model.RptPersonalAnalysis">
        update rpt_personal_analysis
        set PERSONAL_SUBJECT_ID = #{personalSubjectId,jdbcType=BIGINT},
            REPORT_NAME = #{reportName,jdbcType=VARCHAR},
            USER_ID = #{userId,jdbcType=VARCHAR},
            CREATED_BY = #{createdBy,jdbcType=VARCHAR},
            CREATED_DT = #{createdDt,jdbcType=TIMESTAMP},
            UPDATED_BY = #{updatedBy,jdbcType=VARCHAR},
            UPDATED_DT = #{updatedDt,jdbcType=TIMESTAMP},
            CONFIG_JSON = #{configJson,jdbcType=LONGVARCHAR},
             ANALYSIS_SOURCE_ID = #{analysisSourceId,jdbcType=BIGINT}
        where PERSONAL_ANALYSIS_ID = #{personalAnalysisId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ebase.report.model.RptPersonalAnalysis">
        update rpt_personal_analysis
        set PERSONAL_SUBJECT_ID = #{personalSubjectId,jdbcType=BIGINT},
            REPORT_NAME = #{reportName,jdbcType=VARCHAR},
            USER_ID = #{userId,jdbcType=VARCHAR},
            CREATED_BY = #{createdBy,jdbcType=VARCHAR},
            CREATED_DT = #{createdDt,jdbcType=TIMESTAMP},
            UPDATED_BY = #{updatedBy,jdbcType=VARCHAR},
            UPDATED_DT = #{updatedDt,jdbcType=TIMESTAMP},
              ANALYSIS_SOURCE_ID = #{analysisSourceId,jdbcType=BIGINT}
        where PERSONAL_ANALYSIS_ID = #{personalAnalysisId,jdbcType=BIGINT}
    </update>
    <select id="select" resultMap="ResultMapWithBLOBs" >
        SELECT
        PERSONAL_ANALYSIS_ID, s.PERSONAL_SUBJECT_ID, REPORT_NAME, s.USER_ID, s.CREATED_BY, s.CREATED_DT,
        s.UPDATED_BY, s.UPDATED_DT,t.SUBJECT_NAME,e.TABLE_NAME,s.SHARING_PERSON_ID,s.SHARING_PERSON_NAME
        FROM rpt_personal_analysis s LEFT JOIN RPT_PERSONAL_SUBJECT t ON  s.PERSONAL_SUBJECT_ID = t.PERSONAL_SUBJECT_ID
        LEFT JOIN RPT_DATA_TABLE e ON t.TABLE_ID = e.TABLE_ID
        where
         (
            <if test="userId != null">
                 s.USER_ID = #{userId,jdbcType=VARCHAR}
            </if>
            <if test="roleIds != null and roleIds.size > 0">
                or s.ROLE_ID in (
                <foreach collection="roleIds" item="roleId" separator=",">
                    #{roleId}
                </foreach>
                )
            </if>
        )

            <if test="personalAnalysisId != null">
                and s.PERSONAL_ANALYSIS_ID = #{personalAnalysisId,jdbcType=BIGINT}
            </if>
            <if test="personalSubjectId != null">
                and s.PERSONAL_SUBJECT_ID = #{personalSubjectId,jdbcType=BIGINT}
            </if>
            <if test="reportName != null and reportName != ''">
                and ( s.REPORT_NAME LIKE CONCAT('%',#{reportName,jdbcType=VARCHAR},'%')
                or
                t.SUBJECT_NAME LIKE CONCAT('%',#{reportName,jdbcType=VARCHAR},'%')
                )
            </if>



            <if test="createdBy != null">
                and s.CREATED_BY = #{createdBy,jdbcType=VARCHAR}
            </if>
            <if test="createdDt != null">
                and s.CREATED_DT = #{createdDt,jdbcType=TIMESTAMP}
            </if>
            <if test="updatedBy != null">
                and s.UPDATED_BY = #{updatedBy,jdbcType=VARCHAR}
            </if>
            <if test="updatedDt != null">
                and s.UPDATED_DT = #{updatedDt,jdbcType=TIMESTAMP}
            </if>
            <if test="configJson != null">
                and s.CONFIG_JSON = #{configJson,jdbcType=LONGVARCHAR}
            </if>
        limit #{startRow},#{pageSize}
    </select>
    <sql id="Base_Where_Column_List">
        <trim prefix="where" prefixOverrides="and | or">
            <if test="personalAnalysisId != null">
                and PERSONAL_ANALYSIS_ID = #{personalAnalysisId,jdbcType=BIGINT}
            </if>
            <if test="personalSubjectId != null">
                and PERSONAL_SUBJECT_ID = #{personalSubjectId,jdbcType=BIGINT}
            </if>
            <if test="reportName != null">
                and REPORT_NAME = #{reportName,jdbcType=VARCHAR}
            </if>
            <if test="userId != null">
                and USER_ID = #{userId,jdbcType=VARCHAR}
            </if>
            <if test="createdBy != null">
                and CREATED_BY = #{createdBy,jdbcType=VARCHAR}
            </if>
            <if test="createdDt != null">
                and CREATED_DT = #{createdDt,jdbcType=TIMESTAMP}
            </if>
            <if test="updatedBy != null">
                and UPDATED_BY = #{updatedBy,jdbcType=VARCHAR}
            </if>
            <if test="updatedDt != null">
                and UPDATED_DT = #{updatedDt,jdbcType=TIMESTAMP}
            </if>
            <if test="configJson != null">
                and CONFIG_JSON = #{configJson,jdbcType=LONGVARCHAR}
            </if>
            <if test="analysisSourceId != null">
                and ANALYSIS_SOURCE_ID = #{analysisSourceId,jdbcType=BIGINT}
            </if>
        </trim>
    </sql>

    <!--当前用户获取自己根据userId获取自己的主题表-->
    <select id="getByUserId">
        SELECT *
        FROM USER_ID = #{userId}
    </select>

    <select id="listReportFormCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT  COUNT(DISTINCT s.PERSONAL_SUBJECT_ID)
        FROM RPT_PERSONAL_SUBJECT s
            LEFT JOIN RPT_DATA_TABLE t ON s.TABLE_ID = t.TABLE_ID
            LEFT JOIN RPT_DATASOURCE  d ON d.DATASOURCE_ID = t.DATASOURCE_ID
         WHERE ((s.USER_ID = #{acctId})
        <if test="roleId != null and roleId.size > 0">
            or
            ROLE_ID in (
              <foreach collection="roleId" separator="," item="id">
                  #{id}
              </foreach>
            )
        </if>
        )
        <if test="term != null and term != ''">
             and (t.TABLE_NAME LIKE CONCAT('%',#{term},'%')
             or
             t.TABLE_CODE LIKE CONCAT('%',#{term},'%')
             )
         </if>
        <if test="datasourceName != null and datasourceName != ''">
            and d.DATASOURCE_NAME LIKE CONCAT('%',#{datasourceName},'%')
        </if>
    </select>

    <select id="listReportForm" parameterType="java.util.Map" resultType="com.ebase.report.model.dynamic.ReportTable">
        SELECT  DISTINCT s.PERSONAL_SUBJECT_ID AS 'personalSubjectId', t.TABLE_NAME AS 'tableName',
        t.TABLE_CODE AS 'tableCode',d.DATASOURCE_NAME AS 'datasourceName',t.DEMO AS 'demo',d.DATABASE_TYPE AS 'tableType',d.DATASOURCE_CHINESE_NAME as 'datasourceChineseName' FROM RPT_PERSONAL_SUBJECT s
		LEFT JOIN RPT_DATA_TABLE t ON s.TABLE_ID = t.TABLE_ID
		LEFT JOIN RPT_DATASOURCE  d ON d.DATASOURCE_ID = t.DATASOURCE_ID
        WHERE ((s.USER_ID = #{acctId})
        <if test="roleId != null and roleId.size > 0">
            or
            ROLE_ID in (
            <foreach collection="roleId" separator="," item="id">
                #{id}
            </foreach>
            )
        </if>
        )
        <if test="term != null and term != ''">
            and ( t.TABLE_NAME LIKE CONCAT('%',#{term},'%')
            or
            t.TABLE_CODE LIKE CONCAT('%',#{term},'%')
            )
        </if>
        <if test="datasourceName != null and datasourceName != ''">
            and d.DATASOURCE_NAME LIKE CONCAT('%',#{datasourceName},'%')
        </if>
        limit #{startRow},#{pageSize}
    </select>
    <select id="selectCount" resultType="java.lang.Integer" parameterType="com.ebase.report.model.RptPersonalAnalysis">
        SELECT
        count(PERSONAL_ANALYSIS_ID)
        FROM rpt_personal_analysis s LEFT JOIN RPT_PERSONAL_SUBJECT t ON s.PERSONAL_SUBJECT_ID = t.PERSONAL_SUBJECT_ID
        LEFT JOIN RPT_DATA_TABLE e ON t.TABLE_ID = e.TABLE_ID


        where
        (
        <if test="userId != null">
               s.USER_ID = #{userId,jdbcType=VARCHAR}
        </if>
            <if test="roleIds != null and roleIds.size > 0">
                or s.ROLE_ID in (
                <foreach collection="roleIds" item="roleId" separator=",">#{roleId}
                </foreach>
                )
            </if>
        )

            <if test="personalAnalysisId != null">
                and s.PERSONAL_ANALYSIS_ID = #{personalAnalysisId,jdbcType=BIGINT}
            </if>
            <if test="personalSubjectId != null">
                and s.PERSONAL_SUBJECT_ID = #{personalSubjectId,jdbcType=BIGINT}
            </if>
            <if test="reportName != null and reportName != ''">
                and ( s.REPORT_NAME LIKE CONCAT('%',#{reportName,jdbcType=VARCHAR},'%')
                  or
                t.SUBJECT_NAME LIKE CONCAT('%',#{reportName,jdbcType=VARCHAR},'%')
                )
            </if>

            <if test="createdBy != null">
                and s.CREATED_BY = #{createdBy,jdbcType=VARCHAR}
            </if>
            <if test="createdDt != null">
                and s.CREATED_DT = #{createdDt,jdbcType=TIMESTAMP}
            </if>
            <if test="updatedBy != null">
                and s.UPDATED_BY = #{updatedBy,jdbcType=VARCHAR}
            </if>
            <if test="updatedDt != null">
                and s.UPDATED_DT = #{updatedDt,jdbcType=TIMESTAMP}
            </if>
            <if test="configJson != null">
                and s.CONFIG_JSON = #{configJson,jdbcType=LONGVARCHAR}
            </if>
    </select>

    <select id="selectByName" resultType="java.lang.Integer" >
        select count(PERSONAL_ANALYSIS_ID) from rpt_personal_analysis where REPORT_NAME = #{arg0} and USER_ID = #{arg1}
    </select>

    <delete id="deleteBySubjectId" parameterType="java.lang.Long" >
        delete from rpt_personal_analysis
        where 1 =1
        and PERSONAL_SUBJECT_ID in (
        <foreach collection="longs" item="id" separator=",">
            #{id}
        </foreach>
        )
    </delete>
    <delete id="deleteByAnalysisSourceId" parameterType="java.lang.Long">
         delete from rpt_personal_analysis
                where ANALYSIS_SOURCE_ID = #{key,jdbcType=BIGINT}
    </delete>
    <select id="listAnalysisShareBodyCount" resultType="java.lang.Integer" parameterType="com.ebase.report.model.AnalysisShareBody">
        SELECT COUNT(ANALYSIS_SOURCE_ID) FROM rpt_personal_analysis WHERE ANALYSIS_SOURCE_ID = #{id}
    </select>
    <select id="listAnalysisShareBody" resultMap="BaseResultMap" parameterType="com.ebase.report.model.AnalysisShareBody">
        select * from RPT_PERSONAL_ANALYSIS WHERE ANALYSIS_SOURCE_ID = #{id}
        limit #{startRow},#{pageSize}
    </select>
    <select id="selectByUserAndId" resultMap="BaseResultMap" >
         select * from RPT_PERSONAL_ANALYSIS WHERE ANALYSIS_SOURCE_ID = #{arg1}
         and USER_ID = #{arg0}
    </select>
    <select id="selectByRoleAndId" resultMap="BaseResultMap" >
         select * from RPT_PERSONAL_ANALYSIS WHERE ANALYSIS_SOURCE_ID = #{arg1}
         and ROLE_ID = #{arg0}
    </select>
    <select id="selectUidByPersonId" resultType="java.lang.String">
        SELECT USER_ID FROM rpt_personal_analysis
        WHERE ANALYSIS_SOURCE_ID = #{arg0} AND SHARING_PERSON_ID = #{arg1} AND USER_ID IS NOT NULL
    </select>
    <select id="selectRidByPersonId" resultType="java.lang.String">
        SELECT ROLE_ID FROM rpt_personal_analysis
        WHERE ANALYSIS_SOURCE_ID = #{arg0} AND SHARING_PERSON_ID = #{arg1} AND ROLE_ID IS NOT NULL
    </select>
</mapper>